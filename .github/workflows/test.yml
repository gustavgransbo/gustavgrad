name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Test:
    name: ${{ matrix.session }} (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { python-version: 3.8, os: ubuntu-latest, session: "tests" }
          - { python-version: 3.7, os: ubuntu-latest, session: "tests" }
          - { python-version: 3.8, os: windows-latest, session: "tests" }
          - { python-version: 3.7, os: windows-latest, session: "tests" }
          - { python-version: 3.8, os: ubuntu-latest, session: "lint" }
          - { python-version: 3.8, os: ubuntu-latest, session: "mypy" }

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade pip
      run: pip install --constraint=.github/workflows/constraints.txt pip

    - name: Install Poetry
      run: pip install --constraint=.github/workflows/constraints.txt poetry

    - name: Install Nox
      run: pip install --constraint=.github/workflows/constraints.txt nox

    - name: Install nox-poetry
      run: pip install --constraint=.github/workflows/constraints.txt nox-poetry

    - name: Cache Nox virtualenv
      # poetry install fails on windows when the Nox virtual environment was
      # fetched from cache.
      if: matrix.os != 'windows-latest'
      uses: actions/cache@v2
      id: cache
      with:
        path: .nox
        key: gustavgrad-nox-venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.session }}-${{ hashFiles('**/poetry.lock') }}

    - name: Run Nox
      run: nox --session ${{ matrix.session }}-${{ matrix.python-version }}
